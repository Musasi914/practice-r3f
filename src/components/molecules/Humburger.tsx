/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { type JSX } from "react";
import { useGLTF } from "@react-three/drei";
import type { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    bottomBun: THREE.Mesh;
    meat: THREE.Mesh;
    cheese: THREE.Mesh;
    topBun: THREE.Mesh;
  };
  materials: {
    BunMaterial: THREE.MeshStandardMaterial;
    SteakMaterial: THREE.MeshStandardMaterial;
    CheeseMaterial: THREE.MeshStandardMaterial;
  };
};

export default function Humburger(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("models/hamburger.glb") as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.bottomBun.geometry} material={materials.BunMaterial} />
      <mesh castShadow receiveShadow geometry={nodes.meat.geometry} material={materials.SteakMaterial} position={[0, 2.82, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.cheese.geometry} material={materials.CheeseMaterial} position={[0, 3.04, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.topBun.geometry} material={materials.BunMaterial} position={[0, 1.77, 0]} />
    </group>
  );
}

useGLTF.preload("models/hamburger.glb");
