/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { Text, useGLTF } from "@react-three/drei";
import { Select } from "@react-three/postprocessing";
import { debounce } from "lodash";
import { useCallback, useState } from "react";
import type { Material, Mesh } from "three";
import Price from "./Price";

export default function Scene(props: {
  rotation: [number, number, number];
  position: [number, number, number];
}) {
  const { nodes, materials } = useGLTF(
    "/shopping/kitchen-transformed.glb"
  ) as unknown as {
    nodes: Record<string, Mesh>;
    materials: Record<string, Material>;
  };

  const [hovered, hover] = useState<string | null>(null);
  const debouncedHover = useCallback(debounce(hover, 30), []);
  const over = (name: string) => (e: MouseEvent) => (
    e.stopPropagation(), debouncedHover(name)
  );
  const price = {
    KNOXHULT: 5999,
    BRÖNDEN: 433,
    SKAFTET: 77,
    FANBYN: 255,
    VOXLÖV: 1699,
    LIVSVERK: 44,
  };
  return (
    <>
      <group {...props} dispose={null}>
        <Select
          enabled={hovered === "BRÖNDEN"}
          onPointerOver={over("BRÖNDEN")}
          onPointerOut={() => debouncedHover(null)}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.carpet.geometry}
            material={materials.carpet}
          />
        </Select>
        <Select
          enabled={hovered === "VOXLÖV"}
          onPointerOver={over("VOXLÖV")}
          onPointerOut={() => debouncedHover(null)}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.table.geometry}
            material={materials.walls}
          />
        </Select>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.kitchen.geometry}
          material={materials.walls}
        />
        <Select
          enabled={hovered === "LIVSVERK"}
          onPointerOver={over("LIVSVERK")}
          onPointerOut={() => debouncedHover(null)}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.vase.geometry}
            material={materials.gray}
          />
        </Select>

        <mesh
          castShadow
          receiveShadow
          geometry={nodes.sink.geometry}
          material={materials.chrome}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.vase1.geometry}
          material={materials.gray}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bottle.geometry}
          material={materials.glass}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.cuttingboard.geometry}
          material={materials.walls}
        />
        <Select
          enabled={hovered === "SKAFTET"}
          onPointerOver={over("SKAFTET")}
          onPointerOut={() => debouncedHover(null)}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lamp.geometry}
            material={materials.gray}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lamp_socket.geometry}
            material={materials.gray}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lamp_cord.geometry}
            material={materials.gray}
          />
        </Select>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bowl.geometry}
          material={materials.walls}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.walls_1.geometry}
          material={materials.floor}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.walls_2.geometry}
          material={materials.walls}
        />
        <Select
          enabled={hovered === "FANBYN"}
          onPointerOver={over("FANBYN")}
          onPointerOut={() => debouncedHover(null)}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.chairs_1.geometry}
            material={materials.walls}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.chairs_2.geometry}
            material={materials.plastic}
          />
        </Select>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.plant_1.geometry}
          material={materials.potted_plant_01_leaves}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.plant_2.geometry}
          material={materials.potted_plant_01_pot}
        />
      </group>
      <Text
        position={[1, 1.25, 0]}
        color="black"
        fontSize={0.15}
        font="/fonts/Inter-Regular.woff"
        letterSpacing={-0.05}
      >
        {hovered ? hovered : "KNOXHULT"}
      </Text>
      <Price value={hovered ? price[hovered] : 0} position={[-2, 0.3, -3.25]} />
    </>
  );
}

useGLTF.preload("/shopping/kitchen-transformed.glb");
